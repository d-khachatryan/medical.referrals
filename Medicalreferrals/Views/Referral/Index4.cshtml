@model IEnumerable<Medicalreferrals.Models.ReferralItem>

@{
    ViewBag.Title = "Ուղեգրի լրացում";
}

<div class="for-Toolbar">
    @(Html.Kendo().ToolBar()
    .Name("ToolBar")
    .Items(items =>
    {
        items.Add().Type(CommandType.Button).Togglable(false).Text("Մանրամասն").Id("btnDetail").Click("ShowDetail");
    })
    )
    @* Search Panel - Right Slide *@
    <div class="right-slidePanel">
        <div class="slidePanel-Content">
            <div class="slidePanel-btn">
            </div>
            <div class="slidePanel-Content-fields create-item">
                <h4>Ուղեգրի որոնում</h4>
                <div class="form-group margin-5-0">
                    <input id="prmReferralId" class="input-item k-textbox" placeholder="Ուղեգրի համար" />
                </div>
                <div class="form-group margin-5-0">
                    <input id="prmFirstName" class="input-item k-textbox" placeholder="Անուն" />
                </div>
                <div class="form-group margin-5-0">
                    <input id="prmLastName" class="input-item k-textbox" placeholder="Ազգանուն" />
                </div>
                <div class="form-group margin-5-0">
                    <label class="control-label" for="prmInitiationStartDate">ժամանակահատված</label>
                    <div class="input-search data-period">
                        @(Html.Kendo().DatePicker()
                                        .Name("prmStartDate")
                                        .HtmlAttributes(new { placeholder = "սկիզբ" })
                        )
                        @(Html.Kendo().DatePicker()
                                        .Name("prmFinishDate")
                                        .HtmlAttributes(new { placeholder = "ավարտ" })
                        )
                    </div>
                </div>
                <div class="form-group btns align-right">
                    <button type="submit" id="rtSearch" class="k-button" onclick="return Search();"><i class="glyphicon glyphicon-search"></i> Որոնել</button>
                    <button type="submit" class="k-button" onclick="return Clear();"><i class="glyphicon glyphicon-minus"></i> Մաքրել</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document)
        .ready(function () {
            currentReferralIndex = -1;
        });

    function Search() {
        $("#Referral").data("kendoGrid").dataSource.read();
        return false;
    }

    function Clear() {
        $("#prmReferralId").val("");
        $("#prmFirstName").val("");
        $("#prmLastName").val("");
        $("#prmStartDate").val("");
        $("#prmFinishDate").val("");

        $("#Referral").data("kendoGrid").dataSource.read();
        return false;
    }

    function getParameter() {
        return {
            referralId: $("#prmReferralId").val(),
            firstName: $("#prmFirstName").val(),
            lastName: $("#prmLastName").val(),
            startDate: $("#prmStartDate").val(),
            finishDate: $("#prmFinishDate").val()
        };
    }

</script>

@(Html.Kendo().Grid<Medicalreferrals.Models.ReferralItem>()
                      .Name("Referral")
                      .Events(events => events.DataBound("onReferralDataBound").DetailExpand("onReferralDetailExpand"))
                      .Columns(columns =>
                      {
                      columns.Bound(model => model.ReferralNumber).Width(130);
                      columns.Bound(model => model.FirstName);
                      columns.Bound(model => model.LastName);
                      columns.Bound(model => model.PatronymicName);
                      columns.Bound(model => model.BirthDate);
                      columns.Bound(model => model.ReferralStatusName);
                      
                      columns.Bound(model => model.Commands).Template(@<text>Հրահանգներ</text>).ClientTemplate("<a class=\"Update_Icon k-button k-button-icontext\" href='" + Url.Action("ReferralTemplate2", "Referral") + "/#=ReferralId#'><span></span></a>").Width(150);
                      })

      .Selectable(s => s.Mode(GridSelectionMode.Single))
      .Pageable()
      .Scrollable()
      .Sortable()
      .ClientDetailTemplateId("template")
      .Resizable(resize => resize.Columns(true))
      .Reorderable(reorder => reorder.Columns(true))
      .DataSource(dataSource => dataSource
          .Ajax()
          .Read(read => read.Action("ReadReferrals4", "Referral").Data("getParameter"))
          .PageSize(15)
          .Sort(sort => sort.Add("ReferralId").Descending())
          .Model(model =>
          {
              model.Id(p => p.ReferralId);
          }
          )
)
)

@(Html.Kendo().Window().Name("wReferral")
              .Draggable().Resizable()
              .Content("").Modal(true).Actions(actions => actions.Pin().Close())
              .Visible(false).Events(events => events
              .Close("onCloseReferral")
              .Open("onOpenReferral")
              .Refresh("onRefreshReferral"))
)


<script>
    $("#wReferral").kendoWindow({
        width: "95%",
        height: "85%"
    });

    function onReferralDataBound(e) {
        showCommandIcons();
        if (currentReferralIndex != -1) {
            var row = $(this.tbody).find("tr.k-master-row:eq(" + currentReferralIndex + ")");
            this.expandRow(row);
        }
    }

    function onReferralDetailExpand(e) {
        currentReferralIndex = $(e.masterRow).index(".k-master-row");
        var selectedItem = this.dataItem(e.masterRow);
        RID = selectedItem.ReferralId;
        this.collapseRow(this.tbody.find(' > tr.k-master-row').not(e.masterRow));
    }

    function ShowDetail() {
        var grid = $("#Referral").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        if (selectedItem == null) {
            alert("Գործողությունը իրականացնելու համար անհրաժեշտ գրառումը ընտրված չէ:");
            return false;
        };
        window.open('@Url.Action("ReferralDetail", "Referral")/' + selectedItem.ReferralId);
        return false;
    }

    function onOpenReferral(e) {
        kendo.ui.progress(e.sender.element, true);
    }
    function onCloseReferral(e) {
        $("#Referral").data("kendoGrid").dataSource.read();
        $(".k-overlay").css("display", "none");
    }
    function onRefreshReferral(e) {
        kendo.ui.progress(e.sender.element, false);
    }

</script>

<script id="template" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip()
          .Name("tabStrip_#=ReferralId#")
          .SelectedIndex(0)
          .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
          .Items(items =>
          {
          items.Add().Text("Ծառայություններ").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralService>()
              .Name("Service_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(product => product.ReferralServiceId).Hidden();
                  columns.Bound(product => product.ServiceCode);
                  columns.Bound(product => product.ServiceName);
                  columns.Bound(product => product.ServiceCount);
                  columns.Bound(product => product.ServiceCost);
                  columns.Bound(product => product.ReferralServiceDate);
              })
             .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralServices", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralServiceId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
        </text>);
          items.Add().Text("Հետազոտություններ").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralExamination>()
              .Name("Examination_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(product => product.ReferralExaminationId).Hidden();
                  columns.Bound(product => product.ExaminationCode);
                  columns.Bound(product => product.ExaminationName);
                  columns.Bound(product => product.ExaminationCount);
                  columns.Bound(product => product.ExaminationCost);
                  columns.Bound(product => product.ReferralExaminationDate);
              })
             .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralExaminations", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralExaminationId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
        </text>);
          items.Add().Text("Պրոցեդուրաներ").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralProcedure>()
              .Name("Procedure_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(product => product.ReferralProcedureId).Hidden();
                  columns.Bound(product => product.ProcedureCode);
                  columns.Bound(product => product.ProcedureName);
                  columns.Bound(product => product.ProcedureCount);
                  columns.Bound(product => product.ProcedureCost);
                  columns.Bound(product => product.ReferralProcedureDate);
              })
             .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralProcedures", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralProcedureId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
        </text>);

              items.Add().Text("Միջամտություններ").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralSurgery>()
              .Name("Surgery_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(product => product.ReferralSurgeryId).Hidden();
                  columns.Bound(product => product.SurgeryCode);
                  columns.Bound(product => product.SurgeryName);
                  columns.Bound(product => product.SurgeryCount);
                  columns.Bound(product => product.SurgeryCost);
                  columns.Bound(product => product.ReferralSurgeryDate);
              })
             .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralSurgeries", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralSurgeryId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
            </text>);





          items.Add().Text("Խորհրադատվություն").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralConsultation>()
              .Name("Consultation_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(product => product.ReferralConsultationId).Hidden();
                  columns.Bound(product => product.ConsultationCode);
                  columns.Bound(product => product.ConsultationName);
                  columns.Bound(product => product.ConsultationCost);
                  columns.Bound(product => product.ReferralConsultationDate);
              })
             .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralConsultations", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralConsultationId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
        </text>);



          items.Add().Text("Հերթագրումներ").Content(@<text>
        @(Html.Kendo().Grid<Medicalreferrals.Models.ReferralOrderItem>()
              .Name("Order_#=ReferralId#")
              .Columns(columns =>
              {
                  columns.Bound(model => model.ReferralOrderId);
                  columns.Bound(model => model.ReferralId).Hidden();
                  columns.Bound(model => model.ReferralNumber);
                  columns.Bound(model => model.FirstName);
                  columns.Bound(model => model.LastName);
                  columns.Bound(model => model.PatronymicName);
                  columns.Bound(model => model.BirthDate).Width(115);
                  columns.Bound(model => model.ReferralOrderDate).Width(142);
                  columns.Bound(model => model.ServiceDate).Hidden();
              })
                                   .DataSource(dataSource => dataSource
                      .Ajax()
                      .PageSize(5)
                      .Read(read => read.Action("ReadReferralOrders", "Referral", new { id = "#=ReferralId#" }))
                      .Model(model =>
                      {
                          model.Id(p => p.ReferralOrderId);
                      }
                      )
                  )
                  .Scrollable()
                  .Resizable(resize => resize.Columns(true))
                  .Reorderable(reorder => reorder.Columns(true))
                  .Pageable()
                  .Sortable()
                  .ToClientTemplate()
        )
        </text>);

          })
            .ToClientTemplate())
</script>


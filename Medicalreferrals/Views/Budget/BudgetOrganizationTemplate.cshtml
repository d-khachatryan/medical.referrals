@model Medicalreferrals.Models.Budget

@{
    ViewBag.Title = "Բյուջեի կառավարում";
}

<div>
    <div>
        <div class="float-left" style="width:70px">
            @Html.DisplayNameFor(model => model.StartDate)
        </div>
        <div class="float-left">
            @Html.DisplayFor(model => model.StartDate)
        </div>
    </div>
    <div class="clear"></div>
    <div>
        <div class="float-left" style="width:70px">
           @Html.DisplayNameFor(model => model.TerminationDate)
        </div>
        <div class="float-left">
            @Html.DisplayFor(model => model.TerminationDate)
        </div>
    </div>
    <div class="clear"></div>
</div>

@(Html.Kendo().Grid<Medicalreferrals.Models.BudgetOrganization>()
              .Name("BudgetOrganization")
              .Columns(columns =>
              {
                  columns.Bound(product => product.BudgetOrganizationId).Hidden();
                  columns.Bound(product => product.BudgetId).Hidden();
                  columns.ForeignKey(p => p.OrganizationId, (List<SelectListItem>) ViewBag.vbOrganizationCodes, "Value", "Text").Sortable(true).Width(92);
                  columns.ForeignKey(p => p.OrganizationId, (List<SelectListItem>) ViewBag.vbOrganizations, "Value", "Text").Title("Հիմնարկ").Sortable(false).Width(284);
                  columns.ForeignKey(p => p.BudgetLineId, (List<SelectListItem>)ViewBag.vbBudgetLineCodes, "Value", "Text").Sortable(true).Width(140);
                  columns.ForeignKey(p => p.BudgetLineId, (List<SelectListItem>)ViewBag.vbBudgetLines, "Value", "Text").Title("ՊՊ խմբի անվանում").Sortable(false).Width(327);
                  columns.Bound(product => product.BudgetCost).Sortable(false).Width(160);
                  columns.Bound(product => product.Budget1).Sortable(false).Width(105);
                  columns.Bound(product => product.Budget2).Sortable(false).Width(105);
                  columns.Bound(product => product.Budget3).Sortable(false).Width(105);
                  columns.Bound(product => product.ChangeDate).Sortable(false).Width(120);
                  columns.ForeignKey(model => model.ChangeBaseId, (List<SelectListItem>) ViewBag.vbChangeBases, "Value", "Text").EditorTemplateName("ChangeBase").Width(175);
              })
              .ToolBar(toolbar =>
              {
              //toolbar.Save().SaveText("Հիշել").CancelText("Չեղարկել");
              toolbar.Template(@<text>
                @item.SaveButton(cancelText: "Չեղարկել", saveText: "Հիշել")
                <a href="@Url.Action("Index", "Budget")" class="k-button"><i class="fa fa-arrow-circle-o-left"></i> Վերադառնալ հիմնական պատուհանին</a>
                </text>);
              })
              .Editable(editable => editable.Mode(GridEditMode.InCell))
              .Groupable()
              .Filterable()
              .DataSource(dataSource =>
                  dataSource.Ajax()
                    .Batch(true)
                    .Model(model =>
                    {
                        model.Id(product => product.BudgetOrganizationId);
                        model.Field(product => product.BudgetOrganizationId).Editable(false);
                        model.Field(product => product.BudgetId).Editable(false);
                        model.Field(product => product.OrganizationId).Editable(false);
                        model.Field(product => product.Budget1).Editable(false);
                        model.Field(product => product.Budget2).Editable(false);
                        model.Field(product => product.Budget3).Editable(false);
                    })
                    //.Create(create => create.Action("CameraCreate", "Catalog"))
                    .Read(read => read.Action("ReadBudgetOrganizations", "Budget", new { id = @Model.BudgetId }))
                    .Update(update => update.Action("UpdateBudgetOrganization", "Budget"))
              //.Destroy(destroy => destroy.Action("CameraDestroy", "Catalog"))
              )
              .Sortable()
              .HtmlAttributes(new { @class = "catalog-grid" })
              .Scrollable()
)



